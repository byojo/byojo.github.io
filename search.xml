<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>两字符串相加</title>
    <url>/2020/08/03/%E4%B8%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0/</url>
    <content><![CDATA[<h2 id="每日算法：字符串相加"><a href="#每日算法：字符串相加" class="headerlink" title="每日算法：字符串相加"></a>每日算法：字符串相加</h2><p>leetcode: <a href="https://leetcode-cn.com/problems/add-strings/">https://leetcode-cn.com/problems/add-strings/</a></p>
<a id="more"></a>
<h6 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和。 </span><br><span class="line"> </span><br><span class="line">提示： </span><br><span class="line">    num1 和num2 的长度都小于 5100 </span><br><span class="line">    num1 和num2 都只包含数字 0-9 </span><br><span class="line">    num1 和num2 都不包含任何前导零 </span><br><span class="line">    你不能使用任何內建 BigInteger 库， 也不能直接将输入的字符串转换为整数形式  </span><br><span class="line">    Related Topics 字符串</span><br></pre></td></tr></table></figure>

<h6 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public String addStrings(String num1, String num2) &#123;</span><br><span class="line">        int index1 &#x3D; num1.length() - 1;</span><br><span class="line">        int index2 &#x3D; num2.length() - 1;</span><br><span class="line">        int add &#x3D; 0;</span><br><span class="line">        StringBuffer stringBuffer &#x3D; new StringBuffer();</span><br><span class="line">        while (index1 &gt;&#x3D; 0 || index2 &gt;&#x3D; 0 || add !&#x3D; 0) &#123;</span><br><span class="line">            int x &#x3D; index1 &gt;&#x3D; 0 ? num1.charAt(index1) - &#39;0&#39; : 0;</span><br><span class="line">            int y &#x3D; index2 &gt;&#x3D; 0 ? num2.charAt(index2) - &#39;0&#39; : 0;</span><br><span class="line">            int target &#x3D; x + y + add;</span><br><span class="line">            stringBuffer.append(target%10);</span><br><span class="line">            add &#x3D; target &#x2F; 10;</span><br><span class="line">            index1--;</span><br><span class="line">            index2--;</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuffer.reverse();</span><br><span class="line">        return stringBuffer.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>每日算法--课程表</title>
    <url>/2020/08/04/%E8%AF%BE%E7%A8%8B%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="每日算法之课程表"><a href="#每日算法之课程表" class="headerlink" title="每日算法之课程表"></a>每日算法之课程表</h2><p>leetcode: <a href="https://leetcode-cn.com/problems/course-schedule/">https://leetcode-cn.com/problems/course-schedule/</a></p>
<a id="more"></a>


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public boolean canFinish(int numCourses, int[][] prerequisites) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; edges;</span><br><span class="line">        int[] indeg;</span><br><span class="line"></span><br><span class="line">        public boolean canFinish(int numCourses, int[][] prerequisites) &#123;</span><br><span class="line">            edges &#x3D; new ArrayList&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">            for (int i &#x3D; 0; i &lt; numCourses; ++i) &#123;</span><br><span class="line">                edges.add(new ArrayList&lt;Integer&gt;());</span><br><span class="line">            &#125;</span><br><span class="line">            indeg &#x3D; new int[numCourses];</span><br><span class="line">            for (int[] info : prerequisites) &#123;</span><br><span class="line">                edges.get(info[1]).add(info[0]);</span><br><span class="line">                ++indeg[info[0]];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;Integer&gt;();</span><br><span class="line">            for (int i &#x3D; 0; i &lt; numCourses; ++i) &#123;</span><br><span class="line">                if (indeg[i] &#x3D;&#x3D; 0) &#123;</span><br><span class="line">                    queue.offer(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            int visited &#x3D; 0;</span><br><span class="line">            while (!queue.isEmpty()) &#123;</span><br><span class="line">                ++visited;</span><br><span class="line">                int u &#x3D; queue.poll();</span><br><span class="line">                for (int v: edges.get(u)) &#123;</span><br><span class="line">                    --indeg[v];</span><br><span class="line">                    if (indeg[v] &#x3D;&#x3D; 0) &#123;</span><br><span class="line">                        queue.offer(v);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return visited &#x3D;&#x3D; numCourses;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
</search>
